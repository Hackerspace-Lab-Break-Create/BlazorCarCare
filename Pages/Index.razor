@page "/"
@implements IDisposable 
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@inject IState<CarState> CarState

@inject CarService CarService;

<h1>Car list</h1>

@foreach (var car in CarState.Value.Cars)
{
    var carEditUrl = $"car/edit/{car.Plate}";
    <ul class="mb-4">
        <li class="text-carcare">Plate: @car.Plate</li>
        <li>TaxDueDate: @car.TaxDueDate.ToShortDateString()</li>
        <li>InspectionDate: @car.InspectionDate.ToShortDateString()</li>
        <li>InsuranceDate: @car.InsuranceDate.ToShortDateString()</li>
        <li><NavLink class="inline-block bg-blue-200 p-2 m-4 rounded-md" href="@carEditUrl">Edit</NavLink></li>
    </ul>
}

<NavLink href="car/add">Create car</NavLink>

@code{
    protected override Task OnInitializedAsync()
    {
        CarState.StateChanged += StoreChanged;

        CarService.LoadCarsInitialState();

        return Task.CompletedTask;
    }

    private void StoreChanged(object sender, CarState state)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        CarState.StateChanged -= StoreChanged;
    }
}