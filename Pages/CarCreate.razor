@page "/car/{action}/{plate?}"
@inject Microsoft.JSInterop.IJSRuntime  js
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigationManager

@if (addCarModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Add a new car</h3>

    <form @onsubmit="CarSubmit">
        <input type="text" name="plate" @bind-value="addCarModel.Plate" />
        <input type="date" name="taxDueDate" @bind-value="addCarModel.TaxDueDate" />
        <input type="date" name="inspectionDate" @bind-value="addCarModel.InspectionDate" />
        <input type="date" name="insuranceDate" @bind-value="addCarModel.InsuranceDate" />
        <input type="submit" value="@(Action == "edit" ? "Edit Car": "Add Car")" />
    </form>
}
@code {
    private AddCarModel addCarModel;

    [Parameter]
    public string Plate { get; set; }

    [Parameter]
    public string Action { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Action == "add")
        {
            addCarModel = new AddCarModel {
                Plate = Plate
            };
            return;
        }

        if(Plate == null)
        {
            throw new Exception("PLATE_INVALID.");
        }

        var cars = await localStorage.GetItemAsync<List<AddCarModel>>("cars");

        addCarModel = cars.First(car => car.Plate == Plate);

        if (addCarModel == null)
        {
            throw new Exception("CAR_NOT_FOUND.");
        }
    }

    public async Task CarSubmit()
    {
        var cars = await localStorage.GetItemAsync<List<AddCarModel>>("cars");

        if (Action == "edit")
        {
            cars = cars.Where(car => car.Plate != Plate).ToList();
        }

        cars.Add(addCarModel);

        await js.InvokeVoidAsync("console.log", addCarModel);

        await localStorage.SetItemAsync("cars", cars);
        navigationManager.NavigateTo("/");
    }

    public class AddCarModel
    {
        public string Plate { get; set; }

        public DateTime TaxDueDate { get; set; }

        public DateTime InspectionDate { get; set; }

        public DateTime InsuranceDate { get; set; }
    }
}
